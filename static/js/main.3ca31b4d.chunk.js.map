{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","onSearchChange","placeholder","className","type","onChange","Card","props","alt","src","monster","id","name","href","email","CardList","console","log","monsters","map","App","event","a","setState","searchValue","target","value","loading","state","regex","RegExp","toLowerCase","fetch","mode","json","filteredMonsters","filter","match","users","setTimeout","warn","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6VAGaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,YAAnB,OACrB,uBACIC,UAAU,aACVC,KAAK,SACLF,YAAaA,EACbG,SAAUJ,KCLLK,G,YAAO,SAACC,GACjB,OACI,sBAAKJ,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAaK,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAC7C,mCAAOJ,EAAMG,QAAQE,KAArB,OACA,oBAAGC,KAAI,iBAAYN,EAAMG,QAAQI,OAAjC,cAA6CP,EAAMG,QAAQI,MAA3D,SAHiCP,EAAMG,QAAQC,MCF9CI,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAER,qBAAKJ,UAAU,YAAf,SAEQI,EAAMW,SAASC,KAAI,SAAAT,GACf,OAAO,cAAC,EAAD,CAAMA,QAASA,UCkD3BU,E,kDApDb,aAAe,IAAD,8BACZ,gBAiBFnB,eAlBc,uCAkBG,WAAOoB,GAAP,SAAAC,EAAA,sDACf,EAAKC,SAAS,CAAEC,YAAaH,EAAMI,OAAOC,MAAOC,SAAS,GAA1D,sBAAkE,gCAAAL,EAAA,6DAC1DI,EAAQ,EAAKE,MAAMJ,YACnBK,EAAQ,IAAIC,OAAJ,YAAgBJ,EAAMK,cAAtB,MAFkD,SAGzBC,MAAM,6CAA8C,CAAEC,KAAM,SAHnC,8BAG8CC,OAH9C,OAG1DC,EAH0D,OAGsDC,QAAO,SAAA1B,GAC3H,OAAOA,EAAQE,KAAKmB,cAAcM,MAAMR,MAE1C,EAAKN,SAAS,CAACL,SAAUiB,EAAkBR,SAAS,IANY,4CADnD,2CAlBH,sDAEZ,EAAKC,MAAQ,CACXV,SAAU,GACVS,SAAS,GAJC,E,4FAOd,mCAAAL,EAAA,+EAE+BU,MAAM,8CAFrC,8BAEoFE,OAFpF,OAEUI,EAFV,OAGIC,YAAW,WACT,EAAKhB,SAAS,CAAEL,SAAUoB,EAAOX,SAAS,MACzC,KACHX,QAAQC,IAAIqB,GANhB,kDAQItB,QAAQwB,KAAR,MARJ,0D,0EAsBA,WACE,OACE,cAAC,WAAD,UACA,sBAAKrC,UAAU,MAAf,UACE,mCACE,kDACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CAAWD,YAAY,kBAAkBD,eAAgBwC,KAAKxC,sBAIhEwC,KAAKb,MAAMD,QACT,0CAEA,cAAC,EAAD,CAAUT,SAAUuB,KAAKb,MAAMV,oB,GA7CzBwB,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.3ca31b4d.chunk.js","sourcesContent":["import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ onSearchChange, placeholder }) => (\n    <input\n        className=\"search-box\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={onSearchChange}/>\n);","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    return (\n        <div className=\"card-container\" key={props.monster.id}>\n            <img className=\"card-image\" alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2> { props.monster.name } </h2>\n            <a href={`mailto:${props.monster.email}`}> { props.monster.email } </a>\n        </div>\n    )\n}","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\nexport const CardList = (props) => {\n    console.log(props)\n    return (\n        <div className=\"card-list\">\n            {\n                props.monsters.map(monster => {\n                    return <Card monster={monster} />\n                })\n            }\n        </div>\n    );\n}","import React, { Fragment } from 'react';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\nimport { CardList } from './components/card-list/card-list.component';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      loading: true\n    }\n  }\n  async componentDidMount() {\n    try {\n      const users = await (await fetch('https://jsonplaceholder.typicode.com/users')).json();\n      setTimeout(() => {\n        this.setState({ monsters: users, loading: false });\n      }, 800)\n      console.log(users);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  onSearchChange = async (event) => {\n    this.setState({ searchValue: event.target.value, loading: true }, async () => {\n      const value = this.state.searchValue;\n      const regex = new RegExp(`^(${value.toLowerCase()})`);\n      const filteredMonsters = (await (await fetch('https://jsonplaceholder.typicode.com/users', { mode: 'cors' })).json()).filter(monster => {\n        return monster.name.toLowerCase().match(regex);\n      })\n      this.setState({monsters: filteredMonsters, loading: false})\n    });\n  }\n  \n  render() {\n    return (\n      <Fragment>\n      <div className=\"App\">\n        <header>\n          <h1>Monsters Rolodex</h1>\n          <div className=\"header-search\">\n            <SearchBox placeholder=\"search monsters\" onSearchChange={this.onSearchChange}></SearchBox>\n          </div>\n        </header>\n        {\n          this.state.loading ? (\n            <div>Loading</div>\n          ) : (\n            <CardList monsters={this.state.monsters} />\n          )\n        }\n      </div>\n      </Fragment>\n    );\n  }\n}\n// module.exports.App = App\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}